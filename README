Maze Generator
Copyright (C) 2009-2024 Matthew T. Pandina. All rights reserved.

This is a multi-threaded Qt 6 front-end to a very portable (and memory
efficient) C program I wrote to create and concurrently solve
N-dimensional* mazes of any size.

It uses a randomized Kruskal's algorithm to generate the mazes, and
solves them using a concurrent dead-end filling algorithm I designed.

You can configure the look and size of each maze, open and save mazes
in a highly compressed format, export them as a BMP files scaled to
the current zoom level, print them out on paper, or to a PDF file.

*This GUI only allows 2D mazes to be visualized.

To build the Qt 6 version (for Desktop or Web Assembly), download and use
the Qt 6.7.0 Online Installer.

To build (qt5 branch) under Debian GNU/Linux:

sudo apt-get update
sudo apt-get install build-essential qtcreator qtbase5-dev
git clone https://github.com/artcfox/maze-generator
cd maze-generator
qtcreator MazeGenerator.pro

Set the build type to 'Release' and build it.

(If building on a system which does not support pthreads, you can
rename Maze.c to Maze.cpp from within Qt Creator, and its threading
implementation will automatically switch from pthreads to
std::thread.)

